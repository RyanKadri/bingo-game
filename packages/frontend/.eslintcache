[{"/home/ryan/personal/dev/www/bingo/packages/frontend/src/index.tsx":"1","/home/ryan/personal/dev/www/bingo/packages/frontend/src/App.tsx":"2","/home/ryan/personal/dev/www/bingo/packages/frontend/src/reportWebVitals.tsx":"3","/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/LandingInstructions.tsx":"4","/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/CreateGameView.tsx":"5","/home/ryan/personal/dev/www/bingo/packages/frontend/src/components/BingoBoard.tsx":"6","/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/HostGameView.tsx":"7","/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/PlayGameView.tsx":"8","/home/ryan/personal/dev/www/bingo/packages/frontend/src/utils/config.ts":"9","/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/JoinGameView.tsx":"10"},{"size":500,"mtime":1609529173667,"results":"11","hashOfConfig":"12"},{"size":1135,"mtime":1609765753594,"results":"13","hashOfConfig":"12"},{"size":370,"mtime":1609529242321,"results":"14","hashOfConfig":"12"},{"size":1358,"mtime":1609731827228,"results":"15","hashOfConfig":"12"},{"size":3880,"mtime":1609765753594,"results":"16","hashOfConfig":"12"},{"size":1804,"mtime":1609767168019,"results":"17","hashOfConfig":"12"},{"size":2254,"mtime":1609765753594,"results":"18","hashOfConfig":"12"},{"size":1518,"mtime":1609767039993,"results":"19","hashOfConfig":"12"},{"size":70,"mtime":1609733622995,"results":"20","hashOfConfig":"12"},{"size":1269,"mtime":1609766163096,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1evbu2g",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ryan/personal/dev/www/bingo/packages/frontend/src/index.tsx",[],["44","45"],"/home/ryan/personal/dev/www/bingo/packages/frontend/src/App.tsx",[],"/home/ryan/personal/dev/www/bingo/packages/frontend/src/reportWebVitals.tsx",[],"/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/LandingInstructions.tsx",[],"/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/CreateGameView.tsx",[],"/home/ryan/personal/dev/www/bingo/packages/frontend/src/components/BingoBoard.tsx",[],"/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/HostGameView.tsx",["46"],"import ky from \"ky\";\nimport React, { useEffect, useState } from \"react\"\nimport { Link, useLocation, useParams } from \"react-router-dom\"\nimport { config } from \"../utils/config\";\nimport useSWR from \"swr\";\nimport { BingoGame, Board, Cell } from \"../../../common/src/types/board\";\nimport { BingoBoard } from \"../components/BingoBoard\";\n\nfunction formTrackingBoard(gameInfo: BingoGame): Board {\n    const columns: Cell[][] = [];\n    const numsPerColumn = gameInfo.gameParams.maxNumber / gameInfo.gameParams.letters.length;\n    let colStart = 1;\n    const selectedNumSet = new Set(gameInfo.calledNumbers);\n    for(const _ of gameInfo.gameParams.letters) {\n        const newColumn: Cell[] = [];\n        for(let i = 0; i < numsPerColumn; i++) {\n            const number = colStart + i;\n            newColumn.push({\n                number,\n                type: \"number\",\n                selected: selectedNumSet.has(number)\n            });\n        }\n        columns.push(newColumn)\n        colStart += numsPerColumn\n    }\n    return {\n        columns,\n        letters: gameInfo.gameParams.letters\n    }\n}\n\nexport function HostGameView() {\n\n    const { gameId } = useParams<{ gameId: string }>();\n    const backendURL = `${config.backend}/games/${gameId}`;\n\n    const { data, error, isValidating } = useSWR<BingoGame>(backendURL, () => (\n        ky.get(backendURL).json<BingoGame>()\n    ));\n\n    const [ trackingBoard, setTrackingBoard ] = useState<Board | null>(null);\n\n    useEffect(() => {\n        if(data) {\n            setTrackingBoard(formTrackingBoard(data))\n        }\n    }, [data]);\n\n    return (\n        <main>\n            { isValidating\n                ? <h1>Loading</h1>\n                : (error || !data)\n                    ? <h1>Error</h1>\n                    : (\n                        <>\n                            <h1>Hosting game { data.name }</h1>\n                            Join Link: \n                            <Link to={`/game/${gameId}`}>\n                                { `${location.origin}/game/${gameId}` }\n                            </Link>\n                            { !!trackingBoard && <BingoBoard board={ trackingBoard } /> }\n                        </>\n                    )\n            }\n        </main>\n    )\n}","/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/PlayGameView.tsx",["47"],"/home/ryan/personal/dev/www/bingo/packages/frontend/src/utils/config.ts",[],"/home/ryan/personal/dev/www/bingo/packages/frontend/src/views/JoinGameView.tsx",["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":14,"column":15,"nodeType":"56","messageId":"57","endLine":14,"endColumn":16},{"ruleId":"54","severity":1,"message":"58","line":5,"column":35,"nodeType":"56","messageId":"57","endLine":5,"endColumn":43},{"ruleId":"54","severity":1,"message":"58","line":4,"column":35,"nodeType":"56","messageId":"57","endLine":4,"endColumn":43},{"ruleId":"54","severity":1,"message":"59","line":12,"column":19,"nodeType":"56","messageId":"57","endLine":12,"endColumn":24},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","'NewBoard' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]